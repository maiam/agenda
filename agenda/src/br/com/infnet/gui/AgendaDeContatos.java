
package br.com.infnet.gui;

import br.com.infnet.contatos.Contato;
import br.com.infnet.contatos.ContatoDAO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;


public class ContatosGui extends javax.swing.JFrame {

    private ContatoDAO contatoDAO;
    private static int idEmEdicao;
    private List<Integer> listaDeIds;

    /**
     * Creates new form ContatosGui
     */
    public ContatosGui() {
        initComponents();
        contatoDAO = new ContatoDAO();
        this.listarContatos();
    }

    private void listarContatos() {

        lstNomes.removeAll();
        txtNome.setText(" ");
        txtEmail.setText(" ");
        txtFone.setText(" ");
        listaDeIds = new ArrayList();
        try {

            List<Contato> contatos = contatoDAO.listar();
            for (Contato contato : contatos) {

                lstNomes.add(contato.getNome());
                listaDeIds.add(contato.getId());
            }//for
        } catch (Exception e) {

            JOptionPane.showMessageDialog(rootPane, "Erro ao Listar os Contatos");
        }//trycatch
        txtNome.setText("");
        txtEmail.setText("");
        txtFone.setText("");
    }//listarContatos

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        lstNomes = new java.awt.List();
        lblNome = new java.awt.Label();
        lblEmail = new java.awt.Label();
        lblFone = new java.awt.Label();
        txtNome = new java.awt.TextField();
        txtEmail = new java.awt.TextField();
        txtFone = new java.awt.TextField();
        panel1 = new java.awt.Panel();
        btnSalvar = new java.awt.Button();
        btnLimpar = new java.awt.Button();
        btnExcluir = new java.awt.Button();
        btnImprimir = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agenda de Contatos");
        setName("frm"); // NOI18N
        setPreferredSize(new java.awt.Dimension(500, 700));

        lstNomes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lstNomesItemStateChanged(evt);
            }
        });

        lblNome.setName(""); // NOI18N
        lblNome.setText("Nome");

        lblEmail.setText("Email");

        lblFone.setText("Telefone");

        btnSalvar.setLabel("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        panel1.add(btnSalvar);

        btnLimpar.setLabel("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        panel1.add(btnLimpar);

        btnExcluir.setLabel("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        panel1.add(btnExcluir);

        btnImprimir.setLabel("Imprimir");
        panel1.add(btnImprimir);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblFone, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtFone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(10, 10, 10)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lstNomes, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lstNomes, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        setBounds(0, 0, 480, 489);
    }// </editor-fold>                        

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {                                          

        try {

            Contato contato = new Contato();
            contato.setId(idEmEdicao);
            contato.setNome(txtNome.getText());
            contato.setEmail(txtEmail.getText());
            contato.setFone(txtFone.getText());
            if (idEmEdicao == 0) {

                contatoDAO.inserir(contato);
                listarContatos();
            } else {

                contatoDAO.alterar(contato);
                listarContatos();
            }//ifelse
        } catch (Exception e) {

            JOptionPane.showMessageDialog(rootPane, "Erro ao Salvar os Contatos");
        }//trycatch
    }                                         

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {                                          

        listarContatos();
    }                                         

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {                                           

        try {

            Contato contato = new Contato();
            contato.setId(idEmEdicao);
            if (idEmEdicao == 0) {

                JOptionPane.showMessageDialog(rootPane, "Erro ao Excluir Contato");
            } else {

                contatoDAO.excluir(contato);
                listarContatos();
            }//ifelse
        } catch (Exception e) {

            JOptionPane.showMessageDialog(rootPane, "Erro ao Excluir Contato");
        }//trycatch
    }                                          

    private void lstNomesItemStateChanged(java.awt.event.ItemEvent evt) {                                          

        idEmEdicao = listaDeIds.get(lstNomes.getSelectedIndex());
        try {

            List<Contato> contatos = contatoDAO.listar();
            for (Contato contato : contatos) {

                if (contato.getId() == idEmEdicao) {

                    txtNome.setText(contato.getNome());
                    txtEmail.setText(contato.getEmail());
                    txtFone.setText(contato.getFone());
                }
            }//for
        } catch (Exception e) {

            JOptionPane.showMessageDialog(rootPane, "Erro ao Listar os Contatos");
        }//trycatch
        System.out.println("item: " + lstNomes.getSelectedIndex());
        System.out.println("id: " + idEmEdicao);

    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContatosGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContatosGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContatosGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContatosGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContatosGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private java.awt.Button btnExcluir;
    private java.awt.Button btnImprimir;
    private java.awt.Button btnLimpar;
    private java.awt.Button btnSalvar;
    private java.awt.Label lblEmail;
    private java.awt.Label lblFone;
    private java.awt.Label lblNome;
    private java.awt.List lstNomes;
    private java.awt.Panel panel1;
    private java.awt.TextField txtEmail;
    private java.awt.TextField txtFone;
    private java.awt.TextField txtNome;
    // End of variables declaration                   
}
